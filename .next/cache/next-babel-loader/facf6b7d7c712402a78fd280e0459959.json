{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saruul\\\\Desktop\\\\website\\\\hello-next\\\\pages\\\\_app.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from '../theme';\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    0: isMounted,\n    1: setIsMounted\n  } = useState(false);\n  const darkMode = useDarkMode(true);\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: darkMode.toggle,\n    className: \"jsx-643724708\" + \" \" + \"dark\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"DARK MODE\"), isMounted && __jsx(Component, _extends({}, pageProps, {\n    className: \"jsx-643724708\" + \" \" + (pageProps && pageProps.className != null && pageProps.className || \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"643724708\",\n    __self: this\n  }, \"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2FydXVsXFxEZXNrdG9wXFx3ZWJzaXRlXFxoZWxsby1uZXh0XFxwYWdlc1xcX2FwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQlUiLCJmaWxlIjoiQzpcXFVzZXJzXFxTYXJ1dWxcXERlc2t0b3BcXHdlYnNpdGVcXGhlbGxvLW5leHRcXHBhZ2VzXFxfYXBwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCdcclxuaW1wb3J0IHVzZURhcmtNb2RlIGZyb20gJ3VzZS1kYXJrLW1vZGUnXHJcbmltcG9ydCB7IFRoZW1lUHJvdmlkZXIgfSBmcm9tICdzdHlsZWQtY29tcG9uZW50cydcclxuaW1wb3J0IHsgbGlnaHRUaGVtZSwgZGFya1RoZW1lIH0gZnJvbSAnLi4vdGhlbWUnXHJcblxyXG5jb25zdCBNeUFwcCA9ICh7IENvbXBvbmVudCwgcGFnZVByb3BzIH0pID0+IHtcclxuICBjb25zdCBbaXNNb3VudGVkLCBzZXRJc01vdW50ZWRdID0gdXNlU3RhdGUoZmFsc2UpXHJcbiAgY29uc3QgZGFya01vZGUgPSB1c2VEYXJrTW9kZSh0cnVlKVxyXG4gIGNvbnN0IHRoZW1lID0gZGFya01vZGUudmFsdWUgPyBkYXJrVGhlbWUgOiBsaWdodFRoZW1lXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHNldElzTW91bnRlZCh0cnVlKVxyXG4gIH0sIFtdKVxyXG4gIHJldHVybiAoXHJcbiAgICA8VGhlbWVQcm92aWRlciB0aGVtZT17dGhlbWV9PlxyXG4gICAgICA8YnV0dG9uIGNsYXNzTmFtZT1cImRhcmtcIiBvbkNsaWNrPXtkYXJrTW9kZS50b2dnbGV9PkRBUksgTU9ERTwvYnV0dG9uPlxyXG4gICAgICB7aXNNb3VudGVkICYmIDxDb21wb25lbnQgey4uLnBhZ2VQcm9wc30gLz59XHJcbiAgICAgIDxzdHlsZSBqc3g+XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgYFxyXG4gICAgICAgICAgXHJcbiAgICAgICAgICBgXHJcbiAgICAgICAgfVxyXG4gICAgICA8L3N0eWxlPlxyXG4gICAgPC9UaGVtZVByb3ZpZGVyPlxyXG4gIClcclxufVxyXG5leHBvcnQgZGVmYXVsdCBNeUFwcCJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Saruul\\\\\\\\Desktop\\\\\\\\website\\\\\\\\hello-next\\\\\\\\pages\\\\\\\\_app.js */\"));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Saruul/Desktop/website/hello-next/pages/_app.js"],"names":["React","useState","useEffect","useDarkMode","ThemeProvider","lightTheme","darkTheme","MyApp","Component","pageProps","isMounted","setIsMounted","darkMode","theme","value","toggle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC1C,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMW,QAAQ,GAAGT,WAAW,CAAC,IAAD,CAA5B;AACA,QAAMU,KAAK,GAAGD,QAAQ,CAACE,KAAT,GAAiBR,SAAjB,GAA6BD,UAA3C;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAyB,IAAA,OAAO,EAAED,QAAQ,CAACG,MAA3C;AAAA,uCAAkB,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGL,SAAS,IAAI,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFhB;AAAA;AAAA;AAAA,shDADF;AAaD,CApBD;;AAqBA,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport useDarkMode from 'use-dark-mode'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { lightTheme, darkTheme } from '../theme'\r\n\r\nconst MyApp = ({ Component, pageProps }) => {\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const darkMode = useDarkMode(true)\r\n  const theme = darkMode.value ? darkTheme : lightTheme\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n  }, [])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <button className=\"dark\" onClick={darkMode.toggle}>DARK MODE</button>\r\n      {isMounted && <Component {...pageProps} />}\r\n      <style jsx>\r\n        {\r\n          `\r\n          \r\n          `\r\n        }\r\n      </style>\r\n    </ThemeProvider>\r\n  )\r\n}\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}