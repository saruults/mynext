{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"C:\\\\Users\\\\Saruul\\\\Desktop\\\\website\\\\hello-next\\\\pages\\\\_app.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from '../theme';\n\nvar MyApp = function MyApp(_ref) {\n  var Component = _ref.Component,\n      pageProps = _ref.pageProps;\n\n  var _useState = useState(false),\n      isMounted = _useState[0],\n      setIsMounted = _useState[1];\n\n  var darkMode = useDarkMode(true);\n  var theme = darkMode.value ? darkTheme : lightTheme;\n  useEffect(function () {\n    setIsMounted(true);\n  }, []);\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: darkMode.toggle,\n    className: \"jsx-1801713412\" + \" \" + \"darkbutton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"DARK MODE\"), isMounted && __jsx(Component, _extends({}, pageProps, {\n    className: \"jsx-1801713412\" + \" \" + (pageProps && pageProps.className != null && pageProps.className || \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"1801713412\",\n    __self: this\n  }, \".darkbutton.jsx-1801713412{right:0;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2FydXVsXFxEZXNrdG9wXFx3ZWJzaXRlXFxoZWxsby1uZXh0XFxwYWdlc1xcX2FwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQlUsQUFHcUIsUUFDViIsImZpbGUiOiJDOlxcVXNlcnNcXFNhcnV1bFxcRGVza3RvcFxcd2Vic2l0ZVxcaGVsbG8tbmV4dFxccGFnZXNcXF9hcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgdXNlRGFya01vZGUgZnJvbSAndXNlLWRhcmstbW9kZSdcclxuaW1wb3J0IHsgVGhlbWVQcm92aWRlciB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xyXG5pbXBvcnQgeyBsaWdodFRoZW1lLCBkYXJrVGhlbWUgfSBmcm9tICcuLi90aGVtZSdcclxuXHJcbmNvbnN0IE15QXBwID0gKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkgPT4ge1xyXG4gIGNvbnN0IFtpc01vdW50ZWQsIHNldElzTW91bnRlZF0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICBjb25zdCBkYXJrTW9kZSA9IHVzZURhcmtNb2RlKHRydWUpXHJcbiAgY29uc3QgdGhlbWUgPSBkYXJrTW9kZS52YWx1ZSA/IGRhcmtUaGVtZSA6IGxpZ2h0VGhlbWVcclxuICB1c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgc2V0SXNNb3VudGVkKHRydWUpXHJcbiAgfSwgW10pXHJcbiAgcmV0dXJuIChcclxuICAgIDxUaGVtZVByb3ZpZGVyIHRoZW1lPXt0aGVtZX0+XHJcbiAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiZGFya2J1dHRvblwiIG9uQ2xpY2s9e2RhcmtNb2RlLnRvZ2dsZX0+REFSSyBNT0RFPC9idXR0b24+XHJcbiAgICAgIHtpc01vdW50ZWQgJiYgPENvbXBvbmVudCB7Li4ucGFnZVByb3BzfSAvPn1cclxuICAgICAgPHN0eWxlIGpzeD5cclxuICAgICAgICB7XHJcbiAgICAgICAgICBgXHJcbiAgICAgICAgICAuZGFya2J1dHRvbntcclxuICAgICAgICAgICAgcmlnaHQ6IDA7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBgXHJcbiAgICAgICAgfVxyXG4gICAgICA8L3N0eWxlPlxyXG4gICAgPC9UaGVtZVByb3ZpZGVyPlxyXG4gIClcclxufVxyXG5leHBvcnQgZGVmYXVsdCBNeUFwcCJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Saruul\\\\\\\\Desktop\\\\\\\\website\\\\\\\\hello-next\\\\\\\\pages\\\\\\\\_app.js */\"));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Saruul/Desktop/website/hello-next/pages/_app.js"],"names":["React","useState","useEffect","useDarkMode","ThemeProvider","lightTheme","darkTheme","MyApp","Component","pageProps","isMounted","setIsMounted","darkMode","theme","value","toggle"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAA8B;AAAA,MAA3BC,SAA2B,QAA3BA,SAA2B;AAAA,MAAhBC,SAAgB,QAAhBA,SAAgB;;AAAA,kBACRR,QAAQ,CAAC,KAAD,CADA;AAAA,MACnCS,SADmC;AAAA,MACxBC,YADwB;;AAE1C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,IAAD,CAA5B;AACA,MAAMU,KAAK,GAAGD,QAAQ,CAACE,KAAT,GAAiBR,SAAjB,GAA6BD,UAA3C;AACAH,EAAAA,SAAS,CAAC,YAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAA+B,IAAA,OAAO,EAAED,QAAQ,CAACG,MAAjD;AAAA,wCAAkB,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGL,SAAS,IAAI,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFhB;AAAA;AAAA;AAAA,spDADF;AAeD,CAtBD;;AAuBA,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport useDarkMode from 'use-dark-mode'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { lightTheme, darkTheme } from '../theme'\r\n\r\nconst MyApp = ({ Component, pageProps }) => {\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const darkMode = useDarkMode(true)\r\n  const theme = darkMode.value ? darkTheme : lightTheme\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n  }, [])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <button className=\"darkbutton\" onClick={darkMode.toggle}>DARK MODE</button>\r\n      {isMounted && <Component {...pageProps} />}\r\n      <style jsx>\r\n        {\r\n          `\r\n          .darkbutton{\r\n            right: 0;\r\n          }\r\n          `\r\n        }\r\n      </style>\r\n    </ThemeProvider>\r\n  )\r\n}\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}