{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saruul\\\\Desktop\\\\website\\\\hello-next\\\\pages\\\\_app.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from '../theme';\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    0: isMounted,\n    1: setIsMounted\n  } = useState(false);\n  const darkMode = useDarkMode(true);\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: darkMode.enable,\n    className: \"jsx-3573169987\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, \"DARK MODE\"), __jsx(\"button\", {\n    onClick: darkMode.disable,\n    className: \"jsx-3573169987\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"LIGHT MODE\"), isMounted && __jsx(Component, _extends({}, pageProps, {\n    className: \"jsx-3573169987\" + \" \" + (pageProps && pageProps.className != null && pageProps.className || \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"3573169987\",\n    __self: this\n  }, \".jsx-3573169987{padding-left:5 rem;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2FydXVsXFxEZXNrdG9wXFx3ZWJzaXRlXFxoZWxsby1uZXh0XFxwYWdlc1xcX2FwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQlMsQUFHUSxtQkFBQyIsImZpbGUiOiJDOlxcVXNlcnNcXFNhcnV1bFxcRGVza3RvcFxcd2Vic2l0ZVxcaGVsbG8tbmV4dFxccGFnZXNcXF9hcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0J1xyXG5pbXBvcnQgdXNlRGFya01vZGUgZnJvbSAndXNlLWRhcmstbW9kZSdcclxuaW1wb3J0IHsgVGhlbWVQcm92aWRlciB9IGZyb20gJ3N0eWxlZC1jb21wb25lbnRzJ1xyXG5pbXBvcnQgeyBsaWdodFRoZW1lLCBkYXJrVGhlbWUgfSBmcm9tICcuLi90aGVtZSdcclxuXHJcbmNvbnN0IE15QXBwID0gKHsgQ29tcG9uZW50LCBwYWdlUHJvcHMgfSkgPT4ge1xyXG4gIGNvbnN0IFtpc01vdW50ZWQsIHNldElzTW91bnRlZF0gPSB1c2VTdGF0ZShmYWxzZSlcclxuICBjb25zdCBkYXJrTW9kZSA9IHVzZURhcmtNb2RlKHRydWUpXHJcbiAgY29uc3QgdGhlbWUgPSBkYXJrTW9kZS52YWx1ZSA/IGRhcmtUaGVtZSA6IGxpZ2h0VGhlbWVcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHNldElzTW91bnRlZCh0cnVlKVxyXG4gIH0sIFtdKVxyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPFRoZW1lUHJvdmlkZXIgdGhlbWU9e3RoZW1lfT5cclxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtkYXJrTW9kZS5lbmFibGV9PkRBUksgTU9ERTwvYnV0dG9uPlxyXG4gICAgICA8YnV0dG9uIG9uQ2xpY2s9e2RhcmtNb2RlLmRpc2FibGV9PkxJR0hUIE1PREU8L2J1dHRvbj5cclxuICAgICAge2lzTW91bnRlZCAmJiA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+fVxyXG4gICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgIHtgXHJcbiAgICAgICAgcGFkZGluZy1sZWZ0OiA1IHJlbVxyXG4gICAgICAgIGB9XHJcbiAgICAgIDwvc3R5bGU+XHJcbiAgICA8L1RoZW1lUHJvdmlkZXI+XHJcbiAgKVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBNeUFwcCJdfQ== */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Saruul\\\\\\\\Desktop\\\\\\\\website\\\\\\\\hello-next\\\\\\\\pages\\\\\\\\_app.js */\"));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Saruul/Desktop/website/hello-next/pages/_app.js"],"names":["React","useState","useEffect","useDarkMode","ThemeProvider","lightTheme","darkTheme","MyApp","Component","pageProps","isMounted","setIsMounted","darkMode","theme","value","enable","disable"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC1C,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMW,QAAQ,GAAGT,WAAW,CAAC,IAAD,CAA5B;AACA,QAAMU,KAAK,GAAGD,QAAQ,CAACE,KAAT,GAAiBR,SAAjB,GAA6BD,UAA3C;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,OAAO,EAAED,QAAQ,CAACG,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAQ,IAAA,OAAO,EAAEH,QAAQ,CAACI,OAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGN,SAAS,IAAI,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAHhB;AAAA;AAAA;AAAA,soDADF;AAYD,CArBD;;AAuBA,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport useDarkMode from 'use-dark-mode'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { lightTheme, darkTheme } from '../theme'\r\n\r\nconst MyApp = ({ Component, pageProps }) => {\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const darkMode = useDarkMode(true)\r\n  const theme = darkMode.value ? darkTheme : lightTheme\r\n\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n  }, [])\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <button onClick={darkMode.enable}>DARK MODE</button>\r\n      <button onClick={darkMode.disable}>LIGHT MODE</button>\r\n      {isMounted && <Component {...pageProps} />}\r\n      <style jsx>\r\n        {`\r\n        padding-left: 5 rem\r\n        `}\r\n      </style>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}