{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Saruul\\\\Desktop\\\\website\\\\hello-next\\\\pages\\\\_app.js\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { useState, useEffect } from 'react';\nimport useDarkMode from 'use-dark-mode';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from '../theme';\n\nconst MyApp = ({\n  Component,\n  pageProps\n}) => {\n  const {\n    0: isMounted,\n    1: setIsMounted\n  } = useState(false);\n  const darkMode = useDarkMode(true);\n  const theme = darkMode.value ? darkTheme : lightTheme;\n  useEffect(() => {\n    setIsMounted(true);\n  }, []);\n  return __jsx(ThemeProvider, {\n    theme: theme,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"button\", {\n    onClick: darkMode.toggle,\n    className: \"jsx-187202948\" + \" \" + \"darkbutton\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"DARK MODE\"), isMounted && __jsx(Component, _extends({}, pageProps, {\n    className: \"jsx-187202948\" + \" \" + (pageProps && pageProps.className != null && pageProps.className || \"\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), __jsx(_JSXStyle, {\n    id: \"187202948\",\n    __self: this\n  }, \".darkbutton.jsx-187202948{padding-right:10;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcU2FydXVsXFxEZXNrdG9wXFx3ZWJzaXRlXFxoZWxsby1uZXh0XFxwYWdlc1xcX2FwcC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrQlUsQUFHOEIsaUJBQ25CIiwiZmlsZSI6IkM6XFxVc2Vyc1xcU2FydXVsXFxEZXNrdG9wXFx3ZWJzaXRlXFxoZWxsby1uZXh0XFxwYWdlc1xcX2FwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlRWZmZWN0IH0gZnJvbSAncmVhY3QnXHJcbmltcG9ydCB1c2VEYXJrTW9kZSBmcm9tICd1c2UtZGFyay1tb2RlJ1xyXG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIH0gZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnXHJcbmltcG9ydCB7IGxpZ2h0VGhlbWUsIGRhcmtUaGVtZSB9IGZyb20gJy4uL3RoZW1lJ1xyXG5cclxuY29uc3QgTXlBcHAgPSAoeyBDb21wb25lbnQsIHBhZ2VQcm9wcyB9KSA9PiB7XHJcbiAgY29uc3QgW2lzTW91bnRlZCwgc2V0SXNNb3VudGVkXSA9IHVzZVN0YXRlKGZhbHNlKVxyXG4gIGNvbnN0IGRhcmtNb2RlID0gdXNlRGFya01vZGUodHJ1ZSlcclxuICBjb25zdCB0aGVtZSA9IGRhcmtNb2RlLnZhbHVlID8gZGFya1RoZW1lIDogbGlnaHRUaGVtZVxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBzZXRJc01vdW50ZWQodHJ1ZSlcclxuICB9LCBbXSlcclxuICByZXR1cm4gKFxyXG4gICAgPFRoZW1lUHJvdmlkZXIgdGhlbWU9e3RoZW1lfT5cclxuICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJkYXJrYnV0dG9uXCIgb25DbGljaz17ZGFya01vZGUudG9nZ2xlfT5EQVJLIE1PREU8L2J1dHRvbj5cclxuICAgICAge2lzTW91bnRlZCAmJiA8Q29tcG9uZW50IHsuLi5wYWdlUHJvcHN9IC8+fVxyXG4gICAgICA8c3R5bGUganN4PlxyXG4gICAgICAgIHtcclxuICAgICAgICAgIGBcclxuICAgICAgICAgIC5kYXJrYnV0dG9ue1xyXG4gICAgICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxMDtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgIGBcclxuICAgICAgICB9XHJcbiAgICAgIDwvc3R5bGU+XHJcbiAgICA8L1RoZW1lUHJvdmlkZXI+XHJcbiAgKVxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IE15QXBwIl19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\Saruul\\\\\\\\Desktop\\\\\\\\website\\\\\\\\hello-next\\\\\\\\pages\\\\\\\\_app.js */\"));\n};\n\nexport default MyApp;","map":{"version":3,"sources":["C:/Users/Saruul/Desktop/website/hello-next/pages/_app.js"],"names":["React","useState","useEffect","useDarkMode","ThemeProvider","lightTheme","darkTheme","MyApp","Component","pageProps","isMounted","setIsMounted","darkMode","theme","value","toggle"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,UAAtC;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAD,KAA8B;AAC1C,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMW,QAAQ,GAAGT,WAAW,CAAC,IAAD,CAA5B;AACA,QAAMU,KAAK,GAAGD,QAAQ,CAACE,KAAT,GAAiBR,SAAjB,GAA6BD,UAA3C;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;AAGA,SACE,MAAC,aAAD;AAAe,IAAA,KAAK,EAAEE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAA+B,IAAA,OAAO,EAAED,QAAQ,CAACG,MAAjD;AAAA,uCAAkB,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEGL,SAAS,IAAI,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFhB;AAAA;AAAA;AAAA,0qDADF;AAeD,CAtBD;;AAuBA,eAAeF,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport useDarkMode from 'use-dark-mode'\r\nimport { ThemeProvider } from 'styled-components'\r\nimport { lightTheme, darkTheme } from '../theme'\r\n\r\nconst MyApp = ({ Component, pageProps }) => {\r\n  const [isMounted, setIsMounted] = useState(false)\r\n  const darkMode = useDarkMode(true)\r\n  const theme = darkMode.value ? darkTheme : lightTheme\r\n  useEffect(() => {\r\n    setIsMounted(true)\r\n  }, [])\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <button className=\"darkbutton\" onClick={darkMode.toggle}>DARK MODE</button>\r\n      {isMounted && <Component {...pageProps} />}\r\n      <style jsx>\r\n        {\r\n          `\r\n          .darkbutton{\r\n            padding-right: 10;\r\n          }\r\n          `\r\n        }\r\n      </style>\r\n    </ThemeProvider>\r\n  )\r\n}\r\nexport default MyApp"]},"metadata":{},"sourceType":"module"}