{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport Layout from '../components/Layout';\nimport Cards from '../components/Cards';\nimport { loadFirebase } from '../lib/db.js';\n\nvar News =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(News, _React$Component);\n\n  function News() {\n    _classCallCheck(this, News);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(News).apply(this, arguments));\n  }\n\n  _createClass(News, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps() {\n      var firebase, db, result;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(loadFirebase());\n\n            case 2:\n              firebase = _context.sent;\n              db = firebase.firestore();\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(new _Promise(function (resolve, reject) {\n                var settings = {\n                  timestampsInSnapshots: true\n                };\n                db.settings(settings);\n                db.collection('articles').lilmit(10).get().then(function (snapshot) {\n                  var data = [];\n                  snapshot.forEach(function (doc) {\n                    data.push(_Object$assign({\n                      id: doc.id\n                    }, doc.data()));\n                  });\n                  resolve(data);\n                })[\"catch\"](function (error) {\n                  reject([]);\n                });\n              }));\n\n            case 6:\n              result = _context.sent;\n              return _context.abrupt(\"return\", {});\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return News;\n}(React.Component);\n\nexport { News as default };","map":{"version":3,"sources":["C:/Users/Saruul/Desktop/website/hello-next/pages/news.js"],"names":["Layout","Cards","loadFirebase","News","firebase","db","firestore","resolve","reject","settings","timestampsInSnapshots","collection","lilmit","get","then","snapshot","data","forEach","doc","push","id","error","result","React","Component"],"mappings":";;;;;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAAQC,YAAR,QAA2B,cAA3B;;IAEqBC,I;;;;;;;;;;;;;;;;;;;;+CAEQD,YAAY,E;;;AAA7BE,cAAAA,Q;AACAC,cAAAA,E,GAAKD,QAAQ,CAACE,SAAT,E;;+CACU,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAoB;AACnD,oBAAMC,QAAQ,GAAG;AAACC,kBAAAA,qBAAqB,EAAE;AAAxB,iBAAjB;AACAL,gBAAAA,EAAE,CAACI,QAAH,CAAYA,QAAZ;AACIJ,gBAAAA,EAAE,CAACM,UAAH,CAAc,UAAd,EACCC,MADD,CACQ,EADR,EAECC,GAFD,GAGCC,IAHD,CAGM,UAAAC,QAAQ,EAAI;AACd,sBAAIC,IAAI,GAAG,EAAX;AACAD,kBAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAC,GAAG,EAAI;AACpBF,oBAAAA,IAAI,CAACG,IAAL,CAAU,eAAc;AACpBC,sBAAAA,EAAE,EAAEF,GAAG,CAACE;AADY,qBAAd,EAGPF,GAAG,CAACF,IAAJ,EAHO,CAAV;AAIH,mBALD;AAMAT,kBAAAA,OAAO,CAACS,IAAD,CAAP;AACH,iBAZD,WAYS,UAAAK,KAAK,EAAG;AACbb,kBAAAA,MAAM,CAAC,EAAD,CAAN;AACH,iBAdD;AAeH,eAlBkB,C;;;AAAfc,cAAAA,M;+CAoBE,E;;;;;;;;;;;;EAxBoBC,KAAK,CAACC,S;;SAAnBrB,I","sourcesContent":["import Layout from '../components/Layout';\r\nimport Cards from '../components/Cards';\r\nimport {loadFirebase} from '../lib/db.js'\r\n\r\nexport default class News extends React.Component{\r\n    static async getInitialProps(){\r\n        let firebase = await loadFirebase()\r\n        let db = firebase.firestore()\r\n        let result = await new Promise((resolve, reject) =>{\r\n        const settings = {timestampsInSnapshots: true}\r\n        db.settings(settings)\r\n            db.collection('articles')\r\n            .lilmit(10)\r\n            .get()\r\n            .then(snapshot => {\r\n                let data = []\r\n                snapshot.forEach(doc => {\r\n                    data.push(Object.assign({\r\n                        id: doc.id\r\n\r\n                    }, doc.data()))\r\n                })\r\n                resolve(data)\r\n            }).catch(error =>{\r\n                reject([])\r\n            })\r\n        })\r\n        \r\n        return{}\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}